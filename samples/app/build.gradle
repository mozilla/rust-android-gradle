buildscript {
    ext.agp_version = '8.7.1'
    repositories {
        google()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$agp_version"
        classpath 'org.mozilla.rust-android-gradle:rust-android:+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'org.mozilla.rust-android-gradle.rust-android'

android {
    ndkVersion "27.1.12297006"
    namespace "com.nishtahir.androidrust"

    defaultConfig {
        applicationId "com.nishtahir.androidrust"
        minSdkVersion 21
        targetSdkVersion 35
        compileSdk 35
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

cargo {
    module = "../rust"
    targets = ["x86_64", "arm64"]
    libname = "rust"
}

repositories {
    google()
    mavenCentral()
}

dependencies {
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
}

afterEvaluate {
    // The `cargoBuild` task isn't available until after evaluation.
    android.applicationVariants.configureEach { variant ->
        def productFlavor = ""
        variant.productFlavors.each {
            productFlavor += "${it.name.capitalize()}"
        }
        def buildType = "${variant.buildType.name.capitalize()}"
        tasks["generate${productFlavor}${buildType}Assets"].dependsOn(tasks["cargoBuild"])
    }
}
