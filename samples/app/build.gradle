buildscript {
    //ext.agp_version = '7.0.0'
    //ext.agp_version = '4.0.1'
    ext.agp_version = '7.1.1'
    repositories {
        google()
        //maven {
        //    url 'file://C:\\Users\\josel\\work\\qaxh3_dev\\fhe-windows\\rust-android-gradle\\plugin\\build\\libs'
        //}
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$agp_version"
        classpath 'org.mozilla.rust-android-gradle:rust-android:+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'org.mozilla.rust-android-gradle.rust-android'

android {
    compileSdkVersion 31
    ndkVersion "25.2.9519653"

    defaultConfig {
        applicationId "com.nishtahir.androidrust"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

cargo {
    module = "../rust"
    targets = ["x86_64", "arm64", "arm"]
    libname = "rust"
    pythonCommand = "python"
    cargoCommand = System.properties['user.home'] + "\\.cargo\\bin\\cargo.exe"
    rustcCommand = System.properties['user.home'] + "\\.cargo\\bin\\rustc.exe"
    rustupChannel = "stable"
}

repositories {
    google()
    mavenCentral()
}

dependencies {
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'net.java.dev.jna:jna:4.4.0@aar'
    testImplementation 'junit:junit:4.12'
}

afterEvaluate {
    // The `cargoBuild` task isn't available until after evaluation.
    android.applicationVariants.all { variant ->
        def productFlavor = ""
        variant.productFlavors.each {
            productFlavor += "${it.name.capitalize()}"
        }
        def buildType = "${variant.buildType.name.capitalize()}"
        tasks["generate${productFlavor}${buildType}Assets"].dependsOn(tasks["cargoBuild"])
    }
}
